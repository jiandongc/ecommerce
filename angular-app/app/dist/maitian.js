var cart=angular.module("cart",[]);cart.controller("cartCtrl",function($scope,$cookies,$location,cartSummaryFactory){cartSummaryFactory.get({cartuid:$cookies.get("cart_uid")},function(response){$scope.totalQuantity=response.totalQuantity;$scope.totalPrice=response.totalPrice;$scope.cartItems=response.cartItems},function(error){$scope.totalQuantity=null;$scope.totalPrice=null;$scope.cartItems=null});$scope.checkout=function(){if(typeof $cookies.get("current_user")==="undefined"){$location.path("/login")}else{$location.path("/checkout/delivery")}}});cart.factory("cartSummaryFactory",function($resource){return $resource("http://localhost:8082/anoncarts/summary/:cartuid")});cart.factory("anonCartFactory",function($resource){return $resource("http://localhost:8082/anoncarts/:cartuid")});cart.config(function($routeProvider){$routeProvider.when("/cart",{templateUrl:"cart/cart.html",controller:"cartCtrl"})});var checkout=angular.module("checkout",[]);checkout.controller("deliveryCtrl",function(){});checkout.config(function($routeProvider){$routeProvider.when("/checkout/delivery",{templateUrl:"checkout/delivery.html",controller:"deliveryCtrl"})});var customer=angular.module("customer",["ngRoute","ngResource"]);customer.controller("loginCtrl",function($scope,customersFactory,authService,$rootScope){$rootScope.loginError=false;$scope.registerCustomer=function(){var newCustomer={name:$scope.customer.name,email:$scope.customer.email,password:$scope.customer.password};customersFactory.save(newCustomer,function(data){$scope.login(data)})};$scope.login=function(credentials){authService.authenticateUser(credentials)}});customer.controller("accountCtrl",function($scope,$routeParams,customersFactory){customersFactory.get({id:$routeParams.id},function(response){$scope.customer=response})});customer.factory("customersFactory",function($resource){return $resource("http://localhost:8081/customers/:id")});customer.directive("passwordMatch",[function(){return{restrict:"A",scope:true,require:"ngModel",link:function(scope,elem,attrs,control){var checker=function(){var e1=scope.$eval(attrs.ngModel);var e2=scope.$eval(attrs.passwordMatch);return e1==e2};scope.$watch(checker,function(n){control.$setValidity("unique",n)})}}}]);customer.config(function($routeProvider){$routeProvider.when("/login",{templateUrl:"customer/login.html",controller:"loginCtrl"}).when("/account/:id",{templateUrl:"customer/account.html",controller:"accountCtrl"})});var productDetail=angular.module("productDetail",["ngRoute"]);productDetail.controller("productDetailCtrl",function($scope,$http,$routeParams){$http.get("http://localhost:8080/products/"+$routeParams.id).success(function(response){$scope.product=response})});productDetail.config(["$routeProvider",function($routeProvider){$routeProvider.when("/products/:id",{templateUrl:"product/product.html",controller:"productDetailCtrl"})}]);var allProducts=angular.module("allProduct",["ngRoute","ngCookies"]);allProducts.service("allProductService",function($http){this.getAllProducts=function(){return $http.get("http://localhost:8080/products")}});allProducts.controller("allProductCtrl",function($scope,$cookies,$rootScope,allProductService,anonCartFactory){allProductService.getAllProducts().success(function(response){$scope.products=response;angular.forEach($scope.products,function(value,index){value.quantity=1})});$scope.addItem=function(product){var anonCartItem={productId:product.id,productName:product.name,productPrice:product.unitPrice,quantity:product.quantity,imageUrl:product.imageUrl,cartUid:$cookies.get("cart_uid")};anonCartFactory.save(anonCartItem,function(data){$cookies.put("cart_uid",data.cartUid);$rootScope.$broadcast("updateCartSummary",true)})}});allProducts.config(["$routeProvider",function($routeProvider){$routeProvider.when("/products",{templateUrl:"products/products.html",controller:"allProductCtrl"})}]);var app=angular.module("store",["ngRoute","allProduct","productDetail","customer","cart","checkout","auth","ngCookies"]);app.config(["$routeProvider",function($routeProvider){$routeProvider.otherwise({redirectTo:"/products"})}]);app.controller("appCtrl",function($scope,$cookies,$location,$rootScope,$http,$route,cartSummaryFactory){$scope.$watch(function(){return $cookies.get("current_user")},function(newValue,oldValue){if(typeof $scope.currentUser==="undefined"||newValue!==oldValue){$scope.currentUser=$cookies.get("current_user")}});$scope.$watch(function(){return $cookies.get("cart_uid")},function(newValue,oldValue){if(typeof $scope.cartUid==="undefined"||newValue!==oldValue){$scope.cartUid=$cookies.get("cart_uid");if(typeof $cookies.get("cart_uid")!=="undefined"){$rootScope.$broadcast("updateCartSummary",false)}}});$scope.$on("updateCartSummary",function(event,data){cartSummaryFactory.get({cartuid:$cookies.get("cart_uid")},function(response){$scope.cartUid=$cookies.get("cart_uid");$scope.totalQuantity=response.totalQuantity;$scope.totalPrice=response.totalPrice;$scope.cartItems=response.cartItems;if(data===true){var dropdown=$("ul.nav li.dropdown").find(".dropdown-menu");dropdown.stop(true,true).fadeIn(1e3,"swing",function(){dropdown.stop(true,true).delay(5e3).fadeOut(3800)})}},function(error){$scope.cartUid=null;$scope.totalQuantity=null;$scope.totalPrice=null;$scope.cartItems=null})});$scope.logout=function(){$cookies.remove("current_user");$cookies.remove("access_token");$cookies.remove("cart_uid");$scope.cartItems=null;$location.path("#")};$scope.removeItem=function(cartItem){var configs={headers:{"Content-Type":"application/json"}};$http.delete("http://localhost:8082/anoncarts/"+cartItem.cartUid+"/cartItems/"+cartItem.productId,configs).then(function(response){$rootScope.$broadcast("updateCartSummary",false);if($location.path().endsWith("/cart")){$route.reload()}},function(error){alert("Delete fail")})};$scope.isNotCheckOutPage=function(){if($location.path().search(/^\/checkout/)==-1){$scope.paddingTop="70px";return true}else{$scope.paddingTop="20px";return false}}});var auth=angular.module("auth",["ngCookies"]);auth.factory("authService",function($http,$cookies,$location,$rootScope,$q,customersFactory,cartSummaryFactory){var authenticateUser=function(credentials){validateUser(credentials).then(getCustomerByEmail).then(syncCustomerAndCart).then(redirectToAccountPage,loginFailed)};var validateUser=function(credentials){var data="grant_type=password&username="+credentials.email+"&password="+credentials.password;var configs={headers:{"Content-Type":"application/x-www-form-urlencoded"}};$cookies.put("access_token","Basic "+btoa("client:secret"));return $http.post("http://localhost:9999/uaa/oauth/token",data,configs).then(function(response){$cookies.put("access_token","Bearer "+response.data.access_token);return credentials},function(error){return $q.reject("authentication failed for user")})};var getCustomerByEmail=function(credentials){return customersFactory.get({email:credentials.email}).$promise.then(function(customer){$cookies.put("current_user",customer.name);return customer},function(error){return $q.reject("customer not found")})};var syncCustomerAndCart=function(customer){if(typeof $cookies.get("cart_uid")!=="undefined"){var configs={headers:{"Content-Type":"application/json"}};var cartUid=$cookies.get("cart_uid");return $http.put("http://localhost:8082/anoncarts/"+cartUid,customer.id,configs).then(function(response){return customer},function(error){return $q.reject("update shopping cart failed")})}else{return cartSummaryFactory.get({customerId:customer.id}).$promise.then(function(response){$cookies.put("cart_uid",response.cartUid);return customer},function(error){return customer})}};var redirectToAccountPage=function(customer){$rootScope.loginError=false;$location.path("/account/"+customer.id)};var loginFailed=function(error){$rootScope.loginError=true};return{authenticateUser:authenticateUser}});auth.factory("oauthTokenInterceptor",function($cookies,$location,$q){var service=this;service.request=function(config){config.headers.authorization=$cookies.get("access_token");return config};service.responseError=function(response){if(response.status===401){$location.path("/login")}return $q.reject(response)};return service});auth.config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("oauthTokenInterceptor")}]);
